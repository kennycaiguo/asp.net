数据库引擎：SQL server2019
数据库： kennyDb
插件：自己开发的SqlServerTool.dll

具体代码：
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace treeViewDemo
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            treeView1.Nodes.Clear();
            string dbname = "kennyDb";
            string sql = "select Id,Mname,ParentId from MenuInfos";
            //SqlServerTool是自己封装的类库dll，通过添加引用的方法引用进来
            DataTable dt =SqlServerTool.Dbutil.GetDataTable(sql,1,dbname);
            //创建利用递归所有节点
            CreateNode(dt, null, 0);
        }

        private void CreateNode(DataTable dt,TreeNode pNode,int parentId)
        {
            //.获取要创建的节点数据
            DataRow[] rows=dt.Select("ParentId=" + parentId);
            if (rows.Length > 0)
            {
                foreach (DataRow r in rows)
                {
                    TreeNode node = new TreeNode();
                    node.Name = r["id"].ToString();
                    node.Text = r["MName"].ToString();
                    //决定是否直接添加到treeView
                    if (pNode != null)
                    {
                        pNode.Nodes.Add(node);
                    }
                    else
                    {
                        treeView1.Nodes.Add(node);
                    }
                    //判断这个节点下面有没有子节点，有就递归创建
                    CreateNode(dt, node, int.Parse(node.Name));
                }
            }
        }
    }
}
